.btn-primary-cta {
  background-color: $color-highlight;
}

button.btn-secondary-cta, .btn-secondary-cta a,
a.wp-block-button__link, .wp-block-file a.wp-block-file__button {
  background-color: transparent;
  border: .11rem solid $color-highlight;
  color: $color-highlight;
  @include title-semi-bold;

  &:hover {
    box-shadow: none;
    background-color: $color-highlight;
    color: $color-lightwhite;
    transition: $transition-base;
  }
}

.wp-block-file, .wp-block-button {
a.wp-block-button__link,
a.wp-block-file__button {
  &:active, &:focus, &:visited {
    color: $color-highlight;
  }
}
}

.btn-tertiary-cta {
  background-color: $color-lightwhite;
  color: $color-text;
}

.select-wrapper  {
  position: relative;
  min-width: 13rem;

  select {
    /* Appearance: none will hide the default arrow */
    appearance: none;
    /* Best to include the browser prefix for cross-browser compatibility */
    -webkit-appearance: none;
    -moz-appearance: none;
    color: $color-highlight;
    width: 100%;
  }

  &::after {
      content: "\25bc"; /* down arrow */
      font-size: $font-size-base;
      position: absolute;
      top: 0;
      right: 0;
      padding: $padding-btn;
      line-height: 2.77rem;
      color: $color-highlight;
  }
}

.os-scrollbar-vertical {
  & > .os-scrollbar-track {
    width: .55rem;
    & .os-scrollbar-handle {
      background: $color-text !important;
    }
  }
}

/*-----------------------------------------------------------
Styles based on 2020 Toggles by Aaron Iker @ https://codepen.io/aaroniker/pen/ZEYoxEY
------------------------------------------------------------*/

@supports(-webkit-appearance: none) or (-moz-appearance: none) {
  input[type='checkbox'],
  input[type='radio'] {
    --active: #3A42BC;
    --active-inner: #F1F1F1;
    --focus: .11rem rgba(39, 94, 254, .3);
    --border: #C8C8EB;
    --border-hover: #3A42BC;
    --background: #F1F1F1;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 1.16rem;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: .055rem solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background .3s, border-color .3s, box-shadow .2s;
    &:after {
      content: '';
      display: block;
      left: 0;
      top: 0;
      position: absolute;
      transition: transform var(--d-t, .3s) var(--d-t-e, ease), opacity var(--d-o, .2s);
    }
    &:checked {
      --b: var(--active);
      --bc: var(--active);
      --d-o: .3s;
      --d-t: .6s;
      --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }
    &:disabled {
      --b: var(--disabled);
      cursor: not-allowed;
      opacity: .9;
      &:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
      }
      & + label {
        cursor: not-allowed;
      }
    }
    &:hover {
      &:not(:checked) {
        &:not(:disabled) {
          --bc: var(--border-hover);
        }
      }
    }
    &:focus {
      box-shadow: 0 0 0 var(--focus);
    }
    &:not(.switch) {
      width: 1.16rem;
      &:after {
        opacity: var(--o, 0);
      }
      &:checked {
        --o: 1;
      }
    }
    & + label {
      font-size: .77rem;
      line-height: 1.16rem;
      display: inline-block;
      vertical-align: top;
      cursor: pointer;
      margin-left: .22rem;
    }
  }
  input[type='checkbox'] {
    &:not(.switch) {
      border-radius: .38rem;
      &:after {
        width: .27rem;
        height: .5rem;
        border: .11rem solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: .38rem;
        top: .22rem;
        transform: rotate(var(--r, 20deg));
      }
      &:checked {
        --r: 43deg;
      }
    }
    &.switch {
      width: 2.11rem;
      border-radius: .61rem;
      &:after {
        left: .11rem;
        top: .11rem;
        border-radius: 50%;
        width: .83rem;
        height: .83rem;
        background: var(--ab, var(--border));
        transform: translateX(var(--x, 0));
      }
      &:checked {
        --ab: var(--active-inner);
        --x: .94rem;
      }
      &:disabled {
        &:not(:checked) {
          &:after {
            opacity: .6;
          }
        }
      }
    }
  }
  input[type='radio'] {
    border-radius: 50%;
    &:after {
      width: 1.05rem;
      height: 1.05rem;
      border-radius: 50%;
      background: var(--active-inner);
      opacity: 0;
      transform: scale(var(--s, .7));
    }
    &:checked {
      --s: .5;
    }
  }
}
